{
  "_args": [
    [
      {
        "raw": "gulp-watch",
        "scope": null,
        "escapedName": "gulp-watch",
        "name": "gulp-watch",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "E:\\github\\practice\\gulp"
    ]
  ],
  "_from": "gulp-watch",
  "_hasShrinkwrap": false,
  "_id": "gulp-watch@5.0.1",
  "_location": "/gulp-watch",
  "_nodeVersion": "8.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/gulp-watch_5.0.1_1532371520211_0.11768282123646623"
  },
  "_npmUser": {
    "name": "floatdrop",
    "email": "floatdrop@gmail.com"
  },
  "_npmVersion": "6.2.0",
  "_phantomChildren": {
    "ansi-gray": "0.1.1",
    "arr-flatten": "1.1.0",
    "color-support": "1.1.3",
    "expand-range": "1.8.2",
    "filename-regex": "2.0.1",
    "is-buffer": "1.1.6",
    "is-posix-bracket": "0.1.1",
    "normalize-path": "2.1.1",
    "object.omit": "2.0.1",
    "parse-glob": "3.0.4",
    "preserve": "0.2.0",
    "regex-cache": "0.4.4",
    "repeat-element": "1.1.3",
    "time-stamp": "1.1.0"
  },
  "_requested": {
    "raw": "gulp-watch",
    "scope": null,
    "escapedName": "gulp-watch",
    "name": "gulp-watch",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-watch/-/gulp-watch-5.0.1.tgz",
  "_shasum": "83d378752f5bfb46da023e73c17ed1da7066215d",
  "_shrinkwrap": null,
  "_spec": "gulp-watch",
  "_where": "E:\\github\\practice\\gulp",
  "author": {
    "name": "Vsevolod Strukchinsky"
  },
  "bugs": {
    "url": "https://github.com/floatdrop/gulp-watch/issues"
  },
  "dependencies": {
    "ansi-colors": "1.1.0",
    "anymatch": "^1.3.0",
    "chokidar": "^2.0.0",
    "fancy-log": "1.3.2",
    "glob-parent": "^3.0.1",
    "object-assign": "^4.1.0",
    "path-is-absolute": "^1.0.1",
    "plugin-error": "1.0.1",
    "readable-stream": "^2.2.2",
    "slash": "^1.0.0",
    "vinyl": "^2.1.0",
    "vinyl-file": "^2.0.0"
  },
  "description": "Watch, that actually is an endless stream",
  "devDependencies": {
    "coveralls": "^2.7.0",
    "istanbul": "^0.3.0",
    "mocha": "^2",
    "mocha-lcov-reporter": "0.0.2",
    "proxyquire": "^1.0.1",
    "rimraf": "^2.2.8",
    "should": "~7",
    "sinon": "^1.9.1",
    "stream-assert": "^2.0.1",
    "strip-ansi": "^3.0.0",
    "xo": "^0.10.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-HnTSBdzAOFIT4wmXYPDUn783TaYAq9bpaN05vuZNP5eni3z3aRx0NAKbjhhMYtcq76x4R1wf4oORDGdlrEjuog==",
    "shasum": "83d378752f5bfb46da023e73c17ed1da7066215d",
    "tarball": "https://registry.npmjs.org/gulp-watch/-/gulp-watch-5.0.1.tgz",
    "fileCount": 4,
    "unpackedSize": 12079,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbViJACRA9TVsSAnZWagAA+mwP/2q8bOIoIOl/kTE6P1ZM\nLaYTu6QGB/s48FqdieMiKtwzFry4/XlYM0bWrCodWuUiBG2LWvz/bhsnXw6q\nUCGNpAe5ouL1FLCUsyfi4uBFbcguJQHpISvKoDrwsqMIwxXQswndErc8NFNp\nMkaWpnWMOFfLpxM/kV/v8NJaqfz03tJfyTO3KF0IYhnYLRjDhRTt1OX/6ULC\nqVCjcIq/SpGLDdkzXNQ3bGCmOCr3kWXd/t2T5dR1+Y5h4dP+Xq8QtiJ5lyPo\n1/nv7uN8P7c8qigxpG7arLzFYjHiN/lRuRlp0YYPdJ/TYYmj+ieDtGaTZIxN\n3lzgiiYk9b2+VFHWGOgzDJU8U61AX3UHQYtibjNygfsrWk6LJgZ8D4livxy1\n93S6+OV3CM1jR+iztLyvI0nKI+7r1SNP13ebCjtH4gcbVWkAAgB9OZyXbMOZ\nIi1Fjrh9pYise9M2ElGaKH3Vqwbhkc2s1NAVO8mauFuG/dYu4AEGl7hqjkPs\n7wmxi5wEFJp3+/I+MR75L1LKwVGiqu0AmwAxK8nAJ1yoh+Z4V4e50FAgmmx3\n7lRZbhiVftg7cNLXks/dBYCr4cC/7N/ZVwd4SvDSIqg0BNRPv7g9MtRd/8ue\nWcpZM1LIJsce28untIg9MCWTHEkMAKgkIrotR9AQaFGgaKbtIrLfM7inevCs\nGtws\r\n=jCAH\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engine": "node >= 0.10",
  "files": [
    "index.js"
  ],
  "gitHead": "80cd83e69f60505d38e8139f0b4ec8395115aa58",
  "homepage": "https://github.com/floatdrop/gulp-watch#readme",
  "keywords": [
    "gulp",
    "watch",
    "gulpplugin"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "floatdrop",
      "email": "floatdrop@gmail.com"
    },
    {
      "name": "ult_combo",
      "email": "ultcombo@gmail.com"
    }
  ],
  "name": "gulp-watch",
  "optionalDependencies": {},
  "readme": "# [gulp](https://github.com/gulpjs/gulp)-watch [![Build Status: Linux][travis-image]][travis-url] [![Build Status: Windows][appveyor-image]][appveyor-url] [![Dependency Status][depstat-image]][depstat-url]\n\nFile watcher that uses super-fast [chokidar](https://github.com/paulmillr/chokidar) and emits vinyl objects.\n\n## Installation\n\n```\nnpm install --save-dev gulp-watch\n```\n\n## Usage\n\n```js\nvar gulp = require('gulp'),\n    watch = require('gulp-watch');\n\ngulp.task('stream', function () {\n\t// Endless stream mode\n    return watch('css/**/*.css', { ignoreInitial: false })\n        .pipe(gulp.dest('build'));\n});\n\ngulp.task('callback', function () {\n\t// Callback mode, useful if any plugin in the pipeline depends on the `end`/`flush` event\n    return watch('css/**/*.css', function () {\n        gulp.src('css/**/*.css')\n            .pipe(gulp.dest('build'));\n    });\n});\n```\n\n> __Protip:__ until gulpjs 4.0 is released, you can use [gulp-plumber](https://github.com/floatdrop/gulp-plumber) to prevent stops on errors.\n\nMore examples can be found in [`docs/readme.md`](/docs/readme.md).\n\n## API\n\n### watch(glob, [options, callback])\n\nCreates a watcher that will spy on files that are matched by `glob` which can be a\nglob string or array of glob strings.\n\nReturns a pass through stream that will emit vinyl files\n(with additional `event` property) that corresponds to event on file-system.\n\n#### Callback `function(vinyl)`\n\nThis function is called when events happen on the file-system.\nAll incoming files that are piped in are grouped and passed to the `events` stream as is.\n\n * `vinyl` â€” is [vinyl](https://github.com/wearefractal/vinyl) object that corresponds to the file that caused the event. Additional `event` field is added to determine what caused changes.\n\nPossible events:\n\n * `add` - file was added to watch or created\n * `change` - file was changed\n * `unlink` - file was deleted\n\n#### Options\n\nThis object is passed to the [`chokidar` options](https://github.com/paulmillr/chokidar#api) directly. Options for [`gulp.src`](https://github.com/gulpjs/gulp/blob/master/docs/API.md#options) are also available. If you do not want content from `watch`, then add `read: false` to the `options` object.\n\n#### options.[ignoreInitial](https://github.com/paulmillr/chokidar#path-filtering)\nType: `Boolean`  \nDefault: `true`\n\n> Indicates whether chokidar should ignore the initial add events or not.\n\n#### options.events\nType: `Array`  \nDefault: `['add', 'change', 'unlink']`\n\nList of events, that should be watched by gulp-watch. Contains [event names from chokidar](https://github.com/paulmillr/chokidar#events).\n\n#### options.base\nType: `String`  \nDefault: `undefined`\n\nUse explicit base path for files from `glob`. Read more about `base` and `cwd` in [gulpjs docs](https://github.com/gulpjs/gulp/blob/master/docs/API.md#options).\n\n#### options.name\nType: `String`  \nDefault: `undefined`\n\nName of the watcher. If it is present in options, you will get more readable output.\n\n#### options.verbose\nType: `Boolean`  \nDefault: `false`\n\nThis option will enable verbose output.\n\n#### options.readDelay\nType: `Number`  \nDefault: `10`\n\nWait for `readDelay` milliseconds before reading the file.\n\n#### options.read\nType: `Boolean`  \nDefault: `true`\n\nSetting this to `false` will return `file.contents` as null and not read the file at all. Most useful as an optimization if your plugins pipeline doesn't make use of the file contents (e.g. `gulp-clean`), or to avoid reading the file twice if you use `gulp.src()` inside the callback instead of the file object that is passed as argument.\n\n### Methods\n\nReturned `Stream` from constructor has some useful methods:\n\n * `add(path / paths)`\n * `unwatch(path / paths)`\n * `close()`\n\n### Events\n\nAll events from [chokidar](http://npmjs.com/chokidar):\n\n * `add`, `change`, `unlink`, `addDir`, `unlinkDir`, `error`, `ready`, `raw`\n\n\n### [Changelog](https://github.com/floatdrop/gulp-watch/releases)\n\n## License\n\nMIT (c) 2014 Vsevolod Strukchinsky (floatdrop@gmail.com)\n\n[npm-url]: https://npmjs.org/package/gulp-watch\n[npm-image]: http://img.shields.io/npm/v/gulp-watch.svg?style=flat\n\n[travis-url]: https://travis-ci.org/floatdrop/gulp-watch\n[travis-image]: http://img.shields.io/travis/floatdrop/gulp-watch.svg?style=flat\n\n[appveyor-url]: https://ci.appveyor.com/project/floatdrop/gulp-watch/branch/master\n[appveyor-image]: https://ci.appveyor.com/api/projects/status/gmjwsqmxht1m131s/branch/master?svg=true\n\n[depstat-url]: https://david-dm.org/floatdrop/gulp-watch\n[depstat-image]: http://img.shields.io/david/floatdrop/gulp-watch.svg?style=flat\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/floatdrop/gulp-watch.git"
  },
  "scripts": {
    "coverage": "istanbul cover node_modules/.bin/_mocha --report html -- -r test/util/set-default-options -R spec",
    "coveralls": "istanbul cover _mocha --report lcovonly -- -r test/util/set-default-options -R spec && cat ./coverage/lcov.info | coveralls && rm -rf ./coverage",
    "test": "xo && mocha -r test/util/set-default-options -t 5000 -R spec test/test-*"
  },
  "version": "5.0.1"
}
