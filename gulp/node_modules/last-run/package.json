{
  "_args": [
    [
      {
        "raw": "last-run@^1.1.0",
        "scope": null,
        "escapedName": "last-run",
        "name": "last-run",
        "rawSpec": "^1.1.0",
        "spec": ">=1.1.0 <2.0.0",
        "type": "range"
      },
      "C:\\gulp\\node_modules\\undertaker"
    ]
  ],
  "_from": "last-run@>=1.1.0 <2.0.0",
  "_id": "last-run@1.1.1",
  "_inCache": true,
  "_location": "/last-run",
  "_nodeVersion": "0.10.41",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/last-run-1.1.1.tgz_1465680171680_0.4022353799082339"
  },
  "_npmUser": {
    "name": "phated",
    "email": "blaine.bublitz@gmail.com"
  },
  "_npmVersion": "2.15.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "last-run@^1.1.0",
    "scope": null,
    "escapedName": "last-run",
    "name": "last-run",
    "rawSpec": "^1.1.0",
    "spec": ">=1.1.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/undertaker"
  ],
  "_resolved": "https://registry.npmjs.org/last-run/-/last-run-1.1.1.tgz",
  "_shasum": "45b96942c17b1c79c772198259ba943bebf8ca5b",
  "_shrinkwrap": null,
  "_spec": "last-run@^1.1.0",
  "_where": "C:\\gulp\\node_modules\\undertaker",
  "author": {
    "name": "Gulp Team",
    "email": "team@gulpjs.com",
    "url": "http://gulpjs.com/"
  },
  "bugs": {
    "url": "https://github.com/gulpjs/last-run/issues"
  },
  "contributors": [
    {
      "name": "Blaine Bublitz",
      "email": "blaine.bublitz@gmail.com"
    }
  ],
  "dependencies": {
    "default-resolution": "^2.0.0",
    "es6-weak-map": "^2.0.1"
  },
  "description": "Capture and retrieve the last time a function was run",
  "devDependencies": {
    "eslint": "^1.7.3",
    "eslint-config-gulp": "^2.0.0",
    "expect": "^1.19.0",
    "istanbul": "^0.4.3",
    "istanbul-coveralls": "^1.0.3",
    "jscs": "^2.3.5",
    "jscs-preset-gulp": "^1.0.0",
    "mocha": "^2.4.5"
  },
  "directories": {},
  "dist": {
    "shasum": "45b96942c17b1c79c772198259ba943bebf8ca5b",
    "tarball": "https://registry.npmjs.org/last-run/-/last-run-1.1.1.tgz"
  },
  "engines": {
    "node": ">= 0.10"
  },
  "files": [
    "LICENSE",
    "index.js"
  ],
  "gitHead": "d10e2395dec464785b2c620cde8eb18d8794b628",
  "homepage": "https://github.com/gulpjs/last-run#readme",
  "keywords": [
    "execution",
    "function",
    "last run",
    "timing"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "phated",
      "email": "blaine@iceddev.com"
    }
  ],
  "name": "last-run",
  "optionalDependencies": {},
  "readme": "<p align=\"center\">\n  <a href=\"http://gulpjs.com\">\n    <img height=\"257\" width=\"114\" src=\"https://raw.githubusercontent.com/gulpjs/artwork/master/gulp-2x.png\">\n  </a>\n</p>\n\n# last-run\n\n[![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url] [![Build Status][travis-image]][travis-url] [![AppVeyor Build Status][appveyor-image]][appveyor-url] [![Coveralls Status][coveralls-image]][coveralls-url] [![Gitter chat][gitter-image]][gitter-url]\n\nCapture and retrieve the last time a function was run.\n\n## Usage\n\n```js\nvar lastRun = require('last-run');\n\nfunction myFunc(){}\n\nmyFunc();\n// capture the run after (or before) calling the function\nlastRun.capture(myFunc);\n\n// retrieve the last run time\nlastRun(myFunc);\n//-> outputs the Date.now() when capture was called\n```\n\n## API\n\n__Note: this module uses a WeakMap shim, and throws on non-extensible functions on platforms that\ndon't have a native WeakMap implementation__\n\n### lastRun(fn, [timeResolution]) => [Timestamp]\n\nTakes a function (`fn`) and returns a timestamp of the last time the function was captured.\n\nReturns undefined if the function has not been captured.\n\nThe timestamp is always given in millisecond but the time resolution can be reduced (rounded down).\nThe use case is to be able to compare a build time to a file time attribute.\nOn node v0.10 or with file system like HFS or FAT, `fs.stat` time attributes like `mtime` precision is one second.\n\nAssuming `lastRun(fn)` returns 1426000001111, `lastRun(fn, 1000)` returns 1426000001000.\n\nThe default time resolution is 1000 on node v0.10, 0 on node 0.11+ and iojs.\nMore information at [`default-resolution`][default-resolution] and\n[undertaker PR #17][undertaker-17].\n\n### lastRun.capture(fn, [timestamp])\n\nTakes a function (`fn`) and captures the current timestamp with `Date.now()`.\nIf passed the optional timestamp, captures that time instead of `Date.now()`.\nThe captured timestamp can then be retrieved using the `lastRun` function.\n\n### lastRun.release(fn)\n\nTakes a function (`fn`) and removes the last run timestamp for it.\n\n## License\n\nMIT\n\n[default-resolution]: https://github.com/gulpjs/default-resolution\n[undertaker-17]: https://github.com/gulpjs/undertaker/pull/17#issuecomment-82374512\n\n[downloads-image]: http://img.shields.io/npm/dm/last-run.svg\n[npm-url]: https://www.npmjs.com/package/last-run\n[npm-image]: http://img.shields.io/npm/v/last-run.svg\n\n[travis-url]: https://travis-ci.org/gulpjs/last-run\n[travis-image]: http://img.shields.io/travis/gulpjs/last-run.svg?label=travis-ci\n\n[appveyor-url]: https://ci.appveyor.com/project/gulpjs/last-run\n[appveyor-image]: https://img.shields.io/appveyor/ci/gulpjs/last-run.svg?label=appveyor\n\n[coveralls-url]: https://coveralls.io/r/gulpjs/last-run\n[coveralls-image]: http://img.shields.io/coveralls/gulpjs/last-run/master.svg\n\n[gitter-url]: https://gitter.im/gulpjs/gulp\n[gitter-image]: https://badges.gitter.im/gulpjs/gulp.svg\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gulpjs/last-run.git"
  },
  "scripts": {
    "cover": "istanbul cover _mocha --report lcovonly",
    "coveralls": "npm run cover && istanbul-coveralls",
    "lint": "eslint . && jscs index.js test/",
    "pretest": "npm run lint",
    "test": "mocha --async-only"
  },
  "version": "1.1.1"
}
