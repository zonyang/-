{
  "_args": [
    [
      {
        "raw": "glob-watcher@^5.0.0",
        "scope": null,
        "escapedName": "glob-watcher",
        "name": "glob-watcher",
        "rawSpec": "^5.0.0",
        "spec": ">=5.0.0 <6.0.0",
        "type": "range"
      },
      "C:\\gulp\\node_modules\\gulp"
    ]
  ],
  "_from": "glob-watcher@^5.0.0",
  "_hasShrinkwrap": false,
  "_id": "glob-watcher@5.0.3",
  "_location": "/glob-watcher",
  "_nodeVersion": "8.11.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/glob-watcher_5.0.3_1542330467072_0.7320266924220147"
  },
  "_npmUser": {
    "name": "phated",
    "email": "blaine.bublitz@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "glob-watcher@^5.0.0",
    "scope": null,
    "escapedName": "glob-watcher",
    "name": "glob-watcher",
    "rawSpec": "^5.0.0",
    "spec": ">=5.0.0 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/gulp"
  ],
  "_resolved": "https://registry.npmjs.org/glob-watcher/-/glob-watcher-5.0.3.tgz",
  "_shasum": "88a8abf1c4d131eb93928994bc4a593c2e5dd626",
  "_shrinkwrap": null,
  "_spec": "glob-watcher@^5.0.0",
  "_where": "C:\\gulp\\node_modules\\gulp",
  "author": {
    "name": "Gulp Team",
    "email": "team@gulpjs.com",
    "url": "http://gulpjs.com/"
  },
  "bugs": {
    "url": "https://github.com/gulpjs/glob-watcher/issues"
  },
  "contributors": [],
  "dependencies": {
    "anymatch": "^2.0.0",
    "async-done": "^1.2.0",
    "chokidar": "^2.0.0",
    "is-negated-glob": "^1.0.0",
    "just-debounce": "^1.0.0",
    "object.defaults": "^1.1.0"
  },
  "description": "Watch globs and execute a function upon change, with intelligent defaults for debouncing and queueing.",
  "devDependencies": {
    "coveralls": "^2.11.2",
    "eslint": "^2.13.1",
    "eslint-config-gulp": "^3.0.1",
    "expect": "^1.16.0",
    "istanbul": "^0.4.0",
    "istanbul-coveralls": "^1.0.1",
    "mocha": "^2.0.0",
    "mocha-lcov-reporter": "^1.2.0",
    "normalize-path": "^2.1.1",
    "rimraf": "^2.6.1",
    "through2": "^2.0.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-8tWsULNEPHKQ2MR4zXuzSmqbdyV5PtwwCaWSGQ1WwHsJ07ilNeN1JB8ntxhckbnpSHaf9dXFUHzIWvm1I13dsg==",
    "shasum": "88a8abf1c4d131eb93928994bc4a593c2e5dd626",
    "tarball": "https://registry.npmjs.org/glob-watcher/-/glob-watcher-5.0.3.tgz",
    "fileCount": 4,
    "unpackedSize": 11093,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb7hhjCRA9TVsSAnZWagAAzRgQAJV/AAhVpW6qRqbv10Hb\n2OZyV9B4iAVvrVr1thfGfqdkmTTdfYMthQBO44I1grZ/vwVW56LA7sNJR1yp\nwqWBgw3ep8wUQRpWOTKQSB4C5Gxxt8mYo9nhFHY4Tp4uMeTf8tohEHfrooCH\n12fhevCm88ALbAo8CZy02uUvKTskdm0CVWfAeaUWOklYhCxKsTRNAcS45ld2\nQ0UgIriRLc68uEOtxnFLYhlkz2Up0rsMtWsBmqx1eoMb3VlZP4jNlECwwUFq\nggjp6Gtl/WusTgw8nFB504DR8BNfxkQlT6fSs6kI3O+ejHDMtt6T+ElSOcEX\nBtAizzPWzUfbnRP4J+DiE0guFBqoXiHzcO/ceAQOu3QucujCdpadRYboKtgA\nySsSeuMfs5EFKXOBRAUYpZj0W1PYHYrnAYqCdndnxw+zFjFwPCV6SA2FPWho\ndt/AAnrhjkjwB3jeM/c+8G92i4OYzvOJ/8nvjUKL3r9/BBEorTi36L5L0x2A\nJwUFjy3IkwHwT7dRNj+PSHZcmoNdbwK7nD9PVfx4JQbOGsyQCLPeOeOycjKp\nVHi+uWDRFe77UvrvSl5BQm9htlAGRxdEHhb9wvWgZUzvtRsACnQ2yt/83hz8\nIO9s+SldwYhTZhyfWO8iIu7wABZ0bNEfX9jjy62OVCZKKrNPj3UJIrPzySEm\nGUWb\r\n=M1h6\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 0.10"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "46aeacdddfdec3f52d41aa264fcfb8976a5d45b1",
  "homepage": "https://github.com/gulpjs/glob-watcher#readme",
  "keywords": [
    "watch",
    "glob",
    "async",
    "queue",
    "debounce",
    "callback"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "contra",
      "email": "yo@contra.io"
    },
    {
      "name": "phated",
      "email": "blaine.bublitz@gmail.com"
    }
  ],
  "name": "glob-watcher",
  "optionalDependencies": {},
  "readme": "<p align=\"center\">\n  <a href=\"http://gulpjs.com\">\n    <img height=\"257\" width=\"114\" src=\"https://raw.githubusercontent.com/gulpjs/artwork/master/gulp-2x.png\">\n  </a>\n</p>\n\n# glob-watcher\n\n[![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url] [![Build Status][travis-image]][travis-url] [![AppVeyor Build Status][appveyor-image]][appveyor-url] [![Coveralls Status][coveralls-image]][coveralls-url] [![Gitter chat][gitter-image]][gitter-url]\n\nWatch globs and execute a function upon change, with intelligent defaults for debouncing and queueing.\n\n## Usage\n\n```js\nvar watch = require('glob-watcher');\n\nwatch(['./*.js', '!./something.js'], function(done){\n  // This function will be called each time a globbed file is changed\n  // but is debounced with a 200ms delay (default) and queues subsequent calls\n\n  // Make sure to signal async completion with the callback\n  // or by returning a stream, promise, observable or child process\n  done();\n\n  // if you need access to the `path` or `stat` object, listen\n  // for the `change` event (see below)\n\n  // if you need to listen to specific events, use the returned\n  // watcher instance (see below)\n});\n\n// Raw chokidar instance\nvar watcher = watch(['./*.js', '!./something.js']);\n\n// Listen for the 'change' event to get `path`/`stat`\n// No async completion available because this is the raw chokidar instance\nwatcher.on('change', function(path, stat) {\n  // `path` is the path of the changed file\n  // `stat` is an `fs.Stat` object (not always available)\n});\n\n// Listen for other events\n// No async completion available because this is the raw chokidar instance\nwatcher.on('add', function(path, stat) {\n  // `path` is the path of the changed file\n  // `stat` is an `fs.Stat` object (not always available)\n});\n```\n\n## API\n\n### `watch(globs[, options][, fn])`\n\nTakes a path string, an array of path strings, a [glob][micromatch] string or an array of [glob][micromatch] strings as `globs` to watch on the filesystem. Also optionally takes `options` to configure the watcher and a `fn` to execute when a file changes.\n\n__Note: As of 5.0.0, globs must use `/` as the separator character because `\\\\` is reserved for escape sequences (as per the Bash 4.3 & Micromatch specs). This means you can't use `path.join()` or `__dirname` in Windows environments. If you need to use `path.join()`, you can use [normalize-path][normalize-path] against your paths afterwards. If you need to use `__dirname`, you can set it as the `cwd` option that gets passed directly to [chokidar][chokidar]. The [micromatch docs][micromatch-backslashes] contain more information about backslashes.__\n\nReturns an instance of [chokidar][chokidar].\n\n#### `fn([callback])`\n\nIf the `fn` is passed, it will be called when the watcher emits a `change`, `add` or `unlink` event. It is automatically debounced with a default delay of 200 milliseconds and subsequent calls will be queued and called upon completion. These defaults can be changed using the `options`.\n\nThe `fn` is passed a single argument, `callback`, which is a function that must be called when work in the `fn` is complete. Instead of calling the `callback` function, [async completion][async-completion] can be signalled by:\n  * Returning a `Stream` or `EventEmitter`\n  * Returning a `Child Process`\n  * Returning a `Promise`\n  * Returning an `Observable`\n\nOnce async completion is signalled, if another run is queued, it will be executed.\n\n#### `options`\n\n##### `options.ignoreInitial`\n\nIf set to `false` the `fn` is called during [chokidar][chokidar] instantiation as it discovers the file paths. Useful if it is desirable to trigger the `fn` during startup.\n\n__Passed through to [chokidar][chokidar], but defaulted to `true` instead of `false`.__\n\nType: `Boolean`\n\nDefault: `true`\n\n##### `options.delay`\n\nThe delay to wait before triggering the `fn`. Useful for waiting on many changes before doing the work on changed files, e.g. find-and-replace on many files.\n\nType: `Number`\n\nDefault: `200` (milliseconds)\n\n##### `options.queue`\n\nWhether or not a file change should queue the `fn` execution if the `fn` is already running. Useful for a long running `fn`.\n\nType: `Boolean`\n\nDefault: `true`\n\n##### `options.events`\n\nAn event name or array of event names to listen for. Useful if you only need to watch specific events.\n\nType: `String | Array<String>`\n\nDefault: `[ 'add', 'change', 'unlink' ]`\n\n##### other\n\nOptions are passed directly to [chokidar][chokidar].\n\n## License\n\nMIT\n\n[micromatch]: https://github.com/micromatch/micromatch\n[normalize-path]: https://www.npmjs.com/package/normalize-path\n[micromatch-backslashes]: https://github.com/micromatch/micromatch#backslashes\n[async-completion]: https://github.com/gulpjs/async-done#completion-and-error-resolution\n[chokidar]: https://github.com/paulmillr/chokidar\n\n[downloads-image]: http://img.shields.io/npm/dm/glob-watcher.svg\n[npm-url]: https://npmjs.com/package/glob-watcher\n[npm-image]: http://img.shields.io/npm/v/glob-watcher.svg\n\n[travis-url]: https://travis-ci.org/gulpjs/glob-watcher\n[travis-image]: http://img.shields.io/travis/gulpjs/glob-watcher.svg?label=travis-ci\n\n[appveyor-url]: https://ci.appveyor.com/project/gulpjs/glob-watcher\n[appveyor-image]: https://img.shields.io/appveyor/ci/gulpjs/glob-watcher.svg?label=appveyor\n\n[coveralls-url]: https://coveralls.io/r/gulpjs/glob-watcher\n[coveralls-image]: http://img.shields.io/coveralls/gulpjs/glob-watcher/master.svg\n\n[gitter-url]: https://gitter.im/gulpjs/gulp\n[gitter-image]: https://badges.gitter.im/gulpjs/gulp.png\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gulpjs/glob-watcher.git"
  },
  "scripts": {
    "cover": "istanbul cover _mocha --report lcovonly",
    "coveralls": "npm run cover && istanbul-coveralls",
    "lint": "eslint .",
    "pretest": "npm run lint",
    "test": "mocha --async-only"
  },
  "version": "5.0.3"
}
