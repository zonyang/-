{
  "_args": [
    [
      {
        "raw": "gulp-connect",
        "scope": null,
        "escapedName": "gulp-connect",
        "name": "gulp-connect",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "E:\\github\\practice\\gulp"
    ]
  ],
  "_from": "gulp-connect",
  "_hasShrinkwrap": false,
  "_id": "gulp-connect@5.7.0",
  "_location": "/gulp-connect",
  "_nodeVersion": "11.2.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/gulp-connect_5.7.0_1544116157488_0.7516486816140993"
  },
  "_npmUser": {
    "name": "avevlad",
    "email": "dev@vld.me"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "gulp-connect",
    "scope": null,
    "escapedName": "gulp-connect",
    "name": "gulp-connect",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-connect/-/gulp-connect-5.7.0.tgz",
  "_shasum": "7e925f5e4c34ebfedf9f318576966e8fe8840d5a",
  "_shrinkwrap": null,
  "_spec": "gulp-connect",
  "_where": "E:\\github\\practice\\gulp",
  "authors": [
    {
      "name": "Vladislav Derjavin",
      "email": "dev@vld.me",
      "url": "http://vld.me/"
    },
    {
      "name": "Johannes Schickling",
      "email": "schickling.j@gmail.com",
      "url": "http://schickling.me/"
    },
    {
      "name": "Justin Chase",
      "email": "justin.m.chase@gmail.com",
      "url": "http://justinmchase.com"
    },
    {
      "name": "Contributors",
      "homepage": "https://github.com/AveVlad/gulp-connect/graphs/contributors"
    }
  ],
  "bugs": {
    "url": "https://github.com/avevlad/gulp-connect/issues"
  },
  "dependencies": {
    "ansi-colors": "^2.0.5",
    "connect": "^3.6.6",
    "connect-livereload": "^0.6.0",
    "fancy-log": "^1.3.2",
    "map-stream": "^0.0.7",
    "send": "^0.16.2",
    "serve-index": "^1.9.1",
    "serve-static": "^1.13.2",
    "tiny-lr": "^1.1.1"
  },
  "description": "Gulp plugin to run a webserver (with LiveReload)",
  "devDependencies": {
    "coffee-script": "^1.12.7",
    "gulp": "^4.0.0",
    "gulp-stylus": "^2.7.0",
    "mocha": "^5.2.0",
    "supertest": "^3.1.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-8tRcC6wgXMLakpPw9M7GRJIhxkYdgZsXwn7n56BA2bQYGLR9NOPhMzx7js+qYDy6vhNkbApGKURjAw1FjY4pNA==",
    "shasum": "7e925f5e4c34ebfedf9f318576966e8fe8840d5a",
    "tarball": "https://registry.npmjs.org/gulp-connect/-/gulp-connect-5.7.0.tgz",
    "fileCount": 15,
    "unpackedSize": 199489,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcCVe+CRA9TVsSAnZWagAAZYMQAI05wnKDP2G522Kf/zAw\nX2RYnRN66IJnMQrewleBW2PnpOK7pfBkJAHSVaXutQ4TSkRJCVa+CJ5Arc9H\nS9gLUUqetRAL3Lf83jhKLmAyTh+XCOIdwE37I+VKsMZJ46ZewNLsolNYQgNJ\nlnGJjVQDgEYooFNhIzbNPF02MUe0aE1W0vYNkC0P4vFH4rs4+Mdttb3OoeU2\nwqHRz2vZaCSLoc2LpHtobGHEYV+NoDjTH2PE+sgixTcgvR8qyOcfq4qHDrTY\nica+Oh/NinwJyVSLNBy0SwmC4xxeftkP/JKFkqhIhnkOTAH5aaLo08yKHv1w\nIDRC7TLO6q/Fu8XvmA3J7zgMZAI1j+jWFY2DAgMiplex9hszG7dV3kDRsQk4\nv7OcIzjwEY+bBEgPLE/Oa+5OSh044+rxGNzmbV4Z85J14H/MT9jPor9uEXqV\n62QzAOxhM+H/czyDOZ6AW6Lm3DihRqw2WP18dxj7M8DV2QBBvJ3xbniKw4IT\nlcVwsHCFOzZnSRl5nT5PNxmNXKiHs8tDOAukX+dWmlaLoFGZJIY6ZrccNBR2\nKJcNd9qAIkreDl6g7tuBLXdTy/NgrFFhKSNpI0WPMlTuaAGlUsnm3HbQ5e/V\nX2vHLrWmT9+ZC3jnKXG+BZ/fi3FLzRgvwvsIHbUlCp17v+Jyeg6dJujIB3mb\n6GwY\r\n=oe02\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "gitHead": "e3210c5083d48de1e8cd6f0f3c462510cb469cea",
  "homepage": "https://github.com/avevlad/gulp-connect#readme",
  "keywords": [
    "gulpfriendly",
    "connect",
    "livereload",
    "webserver",
    "server"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "avevlad",
      "email": "dev@vld.me"
    },
    {
      "name": "justinmchase",
      "email": "justin.m.chase@gmail.com"
    }
  ],
  "name": "gulp-connect",
  "optionalDependencies": {},
  "readme": "gulp-connect [![Build Status](http://img.shields.io/travis/AveVlad/gulp-connect.svg?style=flat-square)](https://travis-ci.org/AveVlad/gulp-connect) [![](http://img.shields.io/npm/dm/gulp-connect.svg?style=flat-square)](https://www.npmjs.org/package/gulp-connect) [![](http://img.shields.io/npm/v/gulp-connect.svg?style=flat-square)](https://www.npmjs.org/package/gulp-connect) [![Join the chat at https://gitter.im/AveVlad/gulp-connect](https://badges.gitter.im/AveVlad/gulp-connect.svg)](https://gitter.im/AveVlad/gulp-connect?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n==============\n\n> Gulp plugin to run a webserver (with LiveReload)\n\n## Sponsors\n\ngulp-connect is sponsored by [JetBrains](https://www.jetbrains.com/)!\n\n<a href=\"https://www.jetbrains.com/\" taget=\"_blank\"><img src=\"jetbrains.png\" height=\"150\" width=\"150\"></a>\n\n\n## Install\n\n```\nnpm install --save-dev gulp-connect\n```\n\n## Usage\n\n```js\nvar gulp = require('gulp'),\n  connect = require('gulp-connect');\n\ngulp.task('connect', function() {\n  connect.server();\n});\n\ngulp.task('default', ['connect']);\n```\n\n#### LiveReload\n```js\nvar gulp = require('gulp'),\n  connect = require('gulp-connect');\n\ngulp.task('connect', function() {\n  connect.server({\n    root: 'app',\n    livereload: true\n  });\n});\n\ngulp.task('html', function () {\n  gulp.src('./app/*.html')\n    .pipe(gulp.dest('./app'))\n    .pipe(connect.reload());\n});\n\ngulp.task('watch', function () {\n  gulp.watch(['./app/*.html'], ['html']);\n});\n\ngulp.task('default', ['connect', 'watch']);\n```\n\n\n#### Start and stop server\n\n```js\ngulp.task('jenkins-tests', function() {\n  connect.server({\n    port: 8888\n  });\n  // run some headless tests with phantomjs\n  // when process exits:\n  connect.serverClose();\n});\n```\n\n\n#### Multiple server\n\n```js\nvar gulp = require('gulp'),\n  stylus = require('gulp-stylus'),\n  connect = require('gulp-connect');\n\ngulp.task('connectDev', function () {\n  connect.server({\n    name: 'Dev App',\n    root: ['app', 'tmp'],\n    port: 8000,\n    livereload: true\n  });\n});\n\ngulp.task('connectDist', function () {\n  connect.server({\n    name: 'Dist App',\n    root: 'dist',\n    port: 8001,\n    livereload: true\n  });\n});\n\ngulp.task('html', function () {\n  gulp.src('./app/*.html')\n    .pipe(gulp.dest('./app'))\n    .pipe(connect.reload());\n});\n\ngulp.task('stylus', function () {\n  gulp.src('./app/stylus/*.styl')\n    .pipe(stylus())\n    .pipe(gulp.dest('./app/css'))\n    .pipe(connect.reload());\n});\n\ngulp.task('watch', function () {\n  gulp.watch(['./app/*.html'], ['html']);\n  gulp.watch(['./app/stylus/*.styl'], ['stylus']);\n});\n\ngulp.task('default', ['connectDist', 'connectDev', 'watch']);\n```\n\n#### http2 support\n\nIf the [http2](https://www.npmjs.com/package/http2) package is installed and you use an https connection to gulp connect then http 2 will be used in preference to http 1.\n\n## API\n\n#### options.root\n\nType: `Array or String`\nDefault: `Directory with gulpfile`\n\nThe root path\n\n#### options.port\n\nType: `Number`\nDefault: `8080`\n\nThe connect webserver port\n\n#### options.host\n\nType: `String`\nDefault: `localhost`\n\n#### options.name\n\nType: `String`\nDefault: `Server`\n\nThe name that will be output when the server starts/stops.\n\n#### options.https\n\nType: `Object`\nDefault: `false`\n\nCan be any options documented at https://nodejs.org/api/https.html#https_https_createserver_options_requestlistener\n\nWhen https is just set to `true` (boolean), then internally some defaults will be used.\n\n#### options.livereload\n\nType: `Object or Boolean`\nDefault: `false`\n\n#### options.livereload.port\n\nType: `Number`\nDefault: `35729`\n\nOverrides the hostname of the script livereload injects in index.html\n\n#### options.livereload.hostname\n\nType: `String`\nDefault: 'undefined'\n\n#### options.fallback\n\nType: `String`\nDefault: `undefined`\n\nFallback file (e.g. `index.html`)\n\n#### options.middleware\n\nType: `Function`\nDefault: `[]`\n\n#### options.debug\n\nType: `Boolean`\nDefault: `false`\n\n#### options.index\n\nType: `Boolean or String of a new index pass or Array of new indexes in preferred order`\nDefault: `true`\n\n```js\ngulp.task('connect', function() {\n  connect.server({\n    root: \"app\",\n    middleware: function(connect, opt) {\n      return [\n        // ...\n      ]\n    }\n  });\n});\n```\n\n## Contributing\n\nTo contribute to this project, you must have CoffeeScript installed: `npm install -g coffee-script`.\n\nThen, to build the `index.js` file, run `coffee -o . -bc src/`. Run `npm test` to run the tests.\n\n## Contributors\n\n* [AveVlad](https://github.com/AveVlad)\n* [schickling](https://github.com/schickling)\n* [justinmchase](https://github.com/justinmchase)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/avevlad/gulp-connect.git"
  },
  "scripts": {
    "prepublish": "coffee -o . -bc src/",
    "pretest": "coffee -o . -bc src/",
    "test": "mocha"
  },
  "version": "5.7.0"
}
